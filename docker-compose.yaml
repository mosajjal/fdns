services:
  coredns:
    image: docker.io/coredns/coredns:1.12.0
    command: ["-conf=/coredns.conf"]
    ports:
      # plain DNS
      - 5310:5310/tcp
      - 5310:5310/udp
      # DNS Over HTTPS
      - 5443:5443/tcp
      # DNS Over TLS
      - 5853:5853/tcp
    volumes:
      - blocklists:/blocklists
      - dnsmonster_socket:/dnsmonster_socket/
      - ./coredns.conf:/coredns.conf
      - ./cert.pem:/certs/cert.pem:ro
      - ./key.pem:/certs/key.pem:ro
    depends_on:
      - dnsmonster

  traefik:
    image: traefik:3.3.3
    command:
      - "--api.insecure=false"
      - "--providers.file.directory=/etc/traefik/config"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.dns.address=:853"
      - "--certificatesresolvers.le.acme.email=TO_BE_REPLACED_EMAIL@example.com"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--serversTransport.insecureSkipVerify=true" # Skip verification for self-signed certs
    ports:
      - "443:443"
      - "853:853"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "./traefik.yaml:/etc/traefik/config/static.yml:ro"
    restart: unless-stopped

  blocklists:
    build:
      dockerfile: ./Dockerfile-blocklists
    volumes:
      - blocklists:/blocklists
  dnsmonster:
    image: ghcr.io/mosajjal/dnsmonster:v1.0.0
    restart: always
    depends_on:
      clickhouse:
        condition: service_healthy
    command:
      - "--serverName=fdns"
      - "--dnstapSocket=unix:///dnsmonster_socket/dnstap.sock"
      - "--dnstapPermission=777"
      - "--clickhouseAddress=clickhouse:9000"
      - "--clickhouseOutputType=1"
      - "--clickhouseBatchSize=10"
      - "--metricendpointtype=prometheus"
      - "--metricprometheusendpoint=http://0.0.0.0:2112/metrics"
    volumes:
      - dnsmonster_socket:/dnsmonster_socket/
  clickhouse:
    image: docker.io/clickhouse:24.8
    restart: always
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - ./clickhouse/tables.sql:/tmp/tables.sql
      - ./clickhouse/dictionaries/:/opt/dictionaries/
      - ./clickhouse/dns_dictionary.xml:/etc/clickhouse-server/dns_dictionary.xml
      - ./clickhouse/config.xml:/etc/clickhouse-server/config.xml
      - clickhouse_data:/var/lib/clickhouse/
    healthcheck:
      test: ["CMD", "bash", "/healthcheck.sh"]
      interval: 10s
      timeout: 10s
      retries: 3
    post_start:
      - command: sh -c "sleep 3; /usr/bin/clickhouse-client -h clickhouse --queries-file /tmp/tables.sql --echo --verbose"
      # create the healtcheck script
      - command: sh -c "echo \"! clickhouse-client -h clickhouse -q 'EXISTS TABLE DNS_LOG' | xargs -I{} test {} -eq 0 \" > /healthcheck.sh && chmod +x /healthcheck.sh"
  grafana:
    image: docker.io/grafana/grafana:11.5.1
    restart: always
    ports:
      - "3000:3000"
    post_start:
      - command: sh -c "sleep 5; grafana cli plugins install vertamedia-clickhouse-datasource"
  victoriametrics:
    image: docker.io/victoriametrics/victoria-metrics:v1.110.0-scratch
    command:
      ["-retentionPeriod=30d", "-promscrape.config=/etc/victoriametrics.yaml"]
    volumes:
      - victoriametrics_data:/victoria-metrics-data
      - ./victoriametrics.yaml:/etc/victoriametrics.yaml
volumes:
  dnsmonster_socket:
  clickhouse_data:
  victoriametrics_data:
  blocklists:
